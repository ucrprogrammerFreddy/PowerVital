// <auto-generated />
using System;
using API_BD.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_BD.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250504162932_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_BD.Models.Ejercicio", b =>
                {
                    b.Property<int>("IdEjercicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEjercicio"));

                    b.Property<string>("AreaMuscular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Repeticiones")
                        .HasColumnType("int");

                    b.HasKey("IdEjercicio");

                    b.ToTable("Ejercicios");
                });

            modelBuilder.Entity("API_BD.Models.EjercicioRutina", b =>
                {
                    b.Property<int>("IdRutina")
                        .HasColumnType("int");

                    b.Property<int>("IdEjercicio")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EjercicioIdEjercicio")
                        .HasColumnType("int");

                    b.Property<int?>("RutinaIdRutina")
                        .HasColumnType("int");

                    b.HasKey("IdRutina", "IdEjercicio");

                    b.HasIndex("EjercicioIdEjercicio");

                    b.HasIndex("RutinaIdRutina");

                    b.ToTable("EjercicioRutina");
                });

            modelBuilder.Entity("API_BD.Models.Padecimiento", b =>
                {
                    b.Property<int>("IdPadecimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPadecimiento"));

                    b.Property<string>("AreaMuscularAfectada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Severidad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPadecimiento");

                    b.ToTable("Padecimientos");
                });

            modelBuilder.Entity("API_BD.Models.PadecimientoCliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdPadecimiento")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteIdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("PadecimientoIdPadecimiento")
                        .HasColumnType("int");

                    b.HasKey("IdCliente", "IdPadecimiento");

                    b.HasIndex("ClienteIdUsuario");

                    b.HasIndex("PadecimientoIdPadecimiento");

                    b.ToTable("PadecimientoCliente");
                });

            modelBuilder.Entity("API_BD.Models.Rutina", b =>
                {
                    b.Property<int>("IdRutina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRutina"));

                    b.Property<int?>("ClienteIdUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.HasKey("IdRutina");

                    b.HasIndex("ClienteIdUsuario");

                    b.ToTable("Rutinas");
                });

            modelBuilder.Entity("API_BD.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Rol").HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("API_BD.Models.Administrador", b =>
                {
                    b.HasBaseType("API_BD.Models.Usuario");

                    b.Property<string>("Titulacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("API_BD.Models.Cliente", b =>
                {
                    b.HasBaseType("API_BD.Models.Usuario");

                    b.Property<decimal>("Altura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EntrenadorId")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoPago")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.HasIndex("EntrenadorId");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("API_BD.Models.Entrenador", b =>
                {
                    b.HasBaseType("API_BD.Models.Usuario");

                    b.Property<string>("FormacionAcademica")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Entrenador");
                });

            modelBuilder.Entity("API_BD.Models.EjercicioRutina", b =>
                {
                    b.HasOne("API_BD.Models.Ejercicio", "Ejercicio")
                        .WithMany("EjerciciosRutina")
                        .HasForeignKey("EjercicioIdEjercicio");

                    b.HasOne("API_BD.Models.Rutina", "Rutina")
                        .WithMany("EjerciciosRutina")
                        .HasForeignKey("RutinaIdRutina");

                    b.Navigation("Ejercicio");

                    b.Navigation("Rutina");
                });

            modelBuilder.Entity("API_BD.Models.PadecimientoCliente", b =>
                {
                    b.HasOne("API_BD.Models.Cliente", "Cliente")
                        .WithMany("PadecimientosClientes")
                        .HasForeignKey("ClienteIdUsuario");

                    b.HasOne("API_BD.Models.Padecimiento", "Padecimiento")
                        .WithMany("PadecimientosClientes")
                        .HasForeignKey("PadecimientoIdPadecimiento");

                    b.Navigation("Cliente");

                    b.Navigation("Padecimiento");
                });

            modelBuilder.Entity("API_BD.Models.Rutina", b =>
                {
                    b.HasOne("API_BD.Models.Cliente", "Cliente")
                        .WithMany("Rutinas")
                        .HasForeignKey("ClienteIdUsuario");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("API_BD.Models.Cliente", b =>
                {
                    b.HasOne("API_BD.Models.Entrenador", "Entrenador")
                        .WithMany("Clientes")
                        .HasForeignKey("EntrenadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Entrenador");
                });

            modelBuilder.Entity("API_BD.Models.Ejercicio", b =>
                {
                    b.Navigation("EjerciciosRutina");
                });

            modelBuilder.Entity("API_BD.Models.Padecimiento", b =>
                {
                    b.Navigation("PadecimientosClientes");
                });

            modelBuilder.Entity("API_BD.Models.Rutina", b =>
                {
                    b.Navigation("EjerciciosRutina");
                });

            modelBuilder.Entity("API_BD.Models.Cliente", b =>
                {
                    b.Navigation("PadecimientosClientes");

                    b.Navigation("Rutinas");
                });

            modelBuilder.Entity("API_BD.Models.Entrenador", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
